{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CaffeLatte/","result":{"data":{"site":{"siteMetadata":{"title":"nowhhk","authorNickName":"HyunKyung"}},"markdownRemark":{"id":"63fa1383-2710-55b3-94c0-060bdb84899c","excerpt":"리눅스란? 리누스 토르발스가 커뮤니티 주체로 개발한 유닉스 기반 컴퓨터 운영 체제이다. 리눅스의 구조 - Linux File System Hierarchy (FHS…","html":"<h3>리눅스란?</h3>\n<p>리누스 토르발스가 커뮤니티 주체로 개발한 유닉스 기반 컴퓨터 운영 체제이다.</p>\n<h3>리눅스의 구조 - Linux File System Hierarchy (FHS)</h3>\n<p><img src=\"https://images.velog.io/images/nowhhk/post/dee5b841-4dbd-4377-b2b4-fad1c5c1ec65/image.png\"></p>\n<ul>\n<li>커널 : 리눅스의 핵심, 프로세스 관리, 메모리관리, 파일 및 장치등을 제어하는 기능을 수행한다.</li>\n<li>셸 : 커널과 사용자의 접점 (bash ..) 사용자로부터 명령을 받아 그것을 해석하고 프로그램을 실행하는 역할 (터미널)</li>\n<li>\n<p>응용프로그램 : 각종 프로그래밍 개발 도구, 문서 편집도구, 네트워크 관련 도구등</p>\n<h3>Home Directory</h3>\n<p>/home/ 사용자의 정보를 저장하는 경로이다.\n명령어 cd를 통해 바로 홈디렉토리로 이동할 수 있다.\n(Home 디렉토리 이외의 다른 디렉토리 들은 주로 system directory 라고 하는데, 즉 리눅스의 운영과 관리에 관련한 파일들이 존재하는 디렉토리이다.)</p>\n</li>\n</ul>\n<h3>절대 경로와 상대경로의 차이점</h3>\n<p>절대경로 : root 디렉토리 부터 시작하는 완전한 경로\n상대경로 : 현재 내 위치를 기반으로 움직이는 경로</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">. (싱글닷):현재경로\n.. (더블닷):상위경로 중첩해서사용가능 ex) cd ../../.. </code></pre></div>\n<h3>Configs</h3>\n<p>리눅스에는 설정을 주로 파일을 통해서 한다. 여러 config file, 즉 여러 설정 파일들 중 가장 중요한 설정 파일이 바로 shell 설정 파일이다.\n각 shell 마다 고유 설정 파일이 있다. Bash는 .bashrc 라는 설정파일을 사용하고 zsh는 .zshrc 라는 설정 파일을 사용한다. 이런 dot으로 시작하는  “dot file” 이나 디렉토리는 숨겨져있으므로 la **-a **옵션을 이용해서 볼수있다.</p>\n<h3>환경변수</h3>\n<p> 환경 변수란 shell의 어떠한 설정 값을 가지고 있는 변수이다.\n어떤 프로그램이 돌아가게 해주는 실행파일의 경로를 잡아주는걸 환경변수 세팅이라고 하는데, 리눅스에는 매우 다양한 환경변수들이 있다.\n현재 지정된 환경변수를 출력하는 명령어는 <em>env _와</em>  printenv_ 이다.</p>\n<p>명령어를 사용할때 만일 경로가 지정되지 않으면 shell이 PATH 환경 변수에 저장되어 있는 경로들을 하나 하나 보면서 실행 하고자 하는 프로그램이 위치해 있는지 찾는다. 그리고 찾으면 실행 시킨다.</p>\n<h3>PATH</h3>\n<p>PATH 환경 변수는 명령어들을 찾을 수 있는 경로들을 저장해놓은 환경 변수 이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</code></pre></div>\n<p>하나의 긴 경로가 아닌 여러 경로를 담고 있는 것이다. 각 경로들을 : 를 사용해서 구분한다.</p>\n<p> mkdir, ls 같은 명령어들도 결국 일종의 실행파일인데 명령어 입력 시 shell이 PATH 환경 변수에 저장되어 있는 경로들을 하나 하나 보면서 실행 하고자 하는 프로그램이 위치해 있는지 찾는다. 그리고 찾으면 실행 시킨다.</p>\n<h3>Piping</h3>\n<p>command1 | command2\ncommand1의 결과값을 command2의 input으로 넘겨준다.</p>\n<p> 예를 들어, history | grep ls\n는 history가 출력하는 값들 중 원하는 값만 필터링을 할 수 가 있다.</p>\n<h3>Basic Shell Commands (명령어)</h3>\n<p><strong>ls</strong>\n현재 디렉토리의 파일 목록을 출력하는 명령어. ‘ls -l’은 자세히 보기\n-a 붙이면 모두 보기.(dot file확인시)</p>\n<p><strong>pwd</strong>\n현재 위치하고 있는 디렉토리를 알려주는 명령어</p>\n<p><strong>mkdir</strong>\nmkdir 새로 생성할 디렉토리명</p>\n<p><strong>cd /</strong> (절대경로)\ncd 이동할 디렉토리의 경로명 (tab 키 누르면 디렉토리 이름 전부안써도 자동완성) </p>\n<p><strong>cd ..</strong> (상대경로)\n현재 디렉토리의 부모 디렉토리로 이동( ..은 부모디렉토리 의미)</p>\n<p><strong>rm</strong>\n파일, 디렉토리 삭제\n<em>rm 파일명\nrm -r 디렉토리명</em></p>\n<p><strong>—help</strong>\n명령어 뒤에 —help를 붙이면 명령의 사용설명서가 출력된다.\n<em>-man (상세한 설명)</em></p>","frontmatter":{"title":"리눅스에 대해 알아보자","date":"2020-03-02","category":"Blog","tags":["cmd","리눅스"],"cover":null}}},"pageContext":{"slug":"/CaffeLatte/","previous":{"fields":{"slug":"/HelloWorld/"},"frontmatter":{"title":"Hello World","tags":["helloworld"],"category":"Trip","date":"2019-05-01","cover":{"childImageSharp":{"fixed":{"src":"/static/3158845556a911efd54536e509fa17b6/31987/helloworld.png"}}}}},"next":{"fields":{"slug":"/CaffeLatte/02/"},"frontmatter":{"title":"Git & Github","tags":["github","git"],"category":"Blog","date":"2020-03-31","cover":null}},"recent":[{"node":{"fields":{"slug":"/CaffeLatte/02/"},"frontmatter":{"title":"Git & Github","tags":["github","git"],"category":"Blog","date":"2020-03-31","cover":null}}},{"node":{"fields":{"slug":"/CaffeLatte/"},"frontmatter":{"title":"리눅스에 대해 알아보자","tags":["cmd","리눅스"],"category":"Blog","date":"2020-03-02","cover":null}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}