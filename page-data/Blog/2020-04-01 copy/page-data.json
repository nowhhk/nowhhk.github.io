{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Blog/2020-04-01 copy/","result":{"data":{"site":{"siteMetadata":{"title":"nowhhk","authorNickName":"HyunKyung"}},"markdownRemark":{"id":"7f4b46b7-304e-5ff6-b433-5ca095856ef9","excerpt":"Box Model & Box-Sizing box-sizing은 박스의 크기를 화면에 표시하는 방식을 변경하는 속성이다. content-box(기본값) : 콘텐트 영역을 기준으로 크기를 정한다 (패딩값을 주면 박스의 크기가 커진다)\nborder-box…","html":"<h2>Box Model &#x26; Box-Sizing</h2>\n<img src=\"https://www.washington.edu/accesscomputing/webd2/student/unit3/images/boxmodel.gif\">\n<p>box-sizing은 박스의 크기를 화면에 표시하는 방식을 변경하는 속성이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">box-sizing: content-box | border-box | initial | inherit;</code></pre></div>\n<p><strong>content-box(기본값)</strong> : 콘텐트 영역을 기준으로 크기를 정한다 (패딩값을 주면 박스의 크기가 커진다)<br/>\n<strong>border-box **: 테두리를 기준으로 크기를 정한다 (패딩값이 주어져도 박스의 크기가 그대로 유지된다)<br/>\n**initial</strong> : 기본값으로 설정<br/>\n<strong>inherit</strong> : 부모 요소의 속성값을 상속받는다<br/></p>\n<h2>Display</h2>\n<img src=\"https://miro.medium.com/max/638/1*9q32zSfXvoNinOjySTFCZQ.png\">\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">display: Inline | Block | Inline Block;</code></pre></div>\n<p><strong>block</strong> : element가 크기와 상관없이 그 옆에 다른 element가 위치하는것을 허용하지 않는다.</p>\n<p><strong>inline</strong> : 박스의 모든 property 설정값을 지운다. 텍스트처럼 인식 하여 컨텐츠의 길이만 존재하고 박스의 폭, 너비가 없다.</p>\n<p><strong>inline-block</strong>: 박스들이 서로서로 옆에 있음. inline에서는 불가능하던 폭, 높이 지정 및 margin과 padding 지정이 가능하다.</p>\n<h2>Inline Tag &#x26; Block Tag</h2>\n<p><img src=\"https://images.velog.io/images/nowhhk/post/d4d24756-a249-4196-844e-d00f66c24c7d/image.png\"></p>\n<h2>Position</h2>\n<p>레이아웃을 잡는 데 사용하는 css 프로퍼티이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">position: static | relative | absolute | sticky | fixed ;</code></pre></div>\n<p><strong>static(디폴트)</strong> : 태그들의 기본상태로 왼쪽에서 오른쪽, 위에서 아래로 쌓여간다. (스크롤하면 넘어간다)<br/> 이 상태에서는 top, bottom, left, right 프로퍼티에 영향받지않는다.<br/>\n<strong>fixed</strong> :  그 위치에 오버랩해서 그대로 고정하여 스크롤해도 위치가 그대로이다.<br/>\n<strong>absolute</strong> : 포지션 relative에 상대적으로 포지션을 잡는다.<br/>\nhtml상에서 해당 element와 관계가 있는 element를 살펴보고 이에 상응해서 포지션이 결정된다.<br/> <strong><em>부모박스가 없으면 본문body에 맞춰 포지션 잡고, 부모박스에 relative 포지션을 설정하면 자식박스는 부모박스 안에서 포지션을 잡는다.</em></strong></p>\n<p>**++) z-index **: position 속성을 이용하면 요소를 겹치게 놓을 수 있다. 이때 요소들의 수직 위치를 z-index 속성으로 정한다. 값은 정수이며, 숫자가 클 수록 위로 올라간다. (z-index 속성이 없으면 0으로 취급. z-index의 기본값은 auto)</p>\n<h2>Float</h2>\n<p>레이아웃을 잡는 데 사용하는 css 프로퍼티이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">float: left | right | none | inline-start | inline-end;</code></pre></div>\n<p><strong>left</strong> : 요소를 content만큼의 공간을 두고 다른 요소에 대하여 상대적으로 왼쪽에 띄운다\n<strong>right</strong> : 요소를 content만큼의 공간을 두고 다른 요소에 대하여 상대적으로 오른쪽에 띄운다\n<strong>none</strong>: 기본값, 요소를 띄우지 않는다.</p>\n<p>텍스트 및 인라인 요소가 그 주위를 감싸는 자기 컨테이너의 좌우측을 따라 배치되어야 함을 지정한다.\n<img src=\"https://images.velog.io/images/nowhhk/post/91ad7cf0-b5c0-4aeb-a856-b4c192d0dafe/IMG_0278.JPG\">{: width=“500”}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">clear : left | right | both 속성으로 float 속성의 흐름을 끊을 수 있다.</code></pre></div>\n<p>위 그림에서 Sidebar 영역이 Main Content보다 짧게 오른쪽으로 float되어있어 Footer에 clear 속성이 없으면 footer 가 메인영역을 채우기위해 위로 올라가게 된다.</p>","frontmatter":{"title":"CSS - Box Model & Display & Position & Float","date":"2020-04-02","category":"Blog","tags":["CSS","Box Model"],"cover":null}}},"pageContext":{"slug":"/Blog/2020-04-01 copy/","previous":{"fields":{"slug":"/Blog/2020-04-01/"},"frontmatter":{"title":"HTML (meta tag & semantic tag)","tags":["HTML","semantic tag"],"category":"Blog","date":"2020-04-01","cover":null}},"next":null,"recent":[{"node":{"fields":{"slug":"/Blog/2020-04-01 copy/"},"frontmatter":{"title":"CSS - Box Model & Display & Position & Float","tags":["CSS","Box Model"],"category":"Blog","date":"2020-04-02","cover":null}}},{"node":{"fields":{"slug":"/Blog/2020-04-01/"},"frontmatter":{"title":"HTML (meta tag & semantic tag)","tags":["HTML","semantic tag"],"category":"Blog","date":"2020-04-01","cover":null}}},{"node":{"fields":{"slug":"/Blog/2020-03-31/"},"frontmatter":{"title":"Git & Github","tags":["github","git"],"category":"Blog","date":"2020-03-31","cover":null}}},{"node":{"fields":{"slug":"/Blog/"},"frontmatter":{"title":"리눅스에 대해 알아보자","tags":["cmd","리눅스"],"category":"Blog","date":"2020-03-02","cover":null}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}