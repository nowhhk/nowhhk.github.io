{"componentChunkName":"component---src-components-templates-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"nowhhk","pageListSize":5}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"float, display를 이용한 레이아웃 방식에서 개선 된 방법이다.\n(IE에서는 10과 11에서만 부분지원하여 사용이 제한적이지만 모바일에선 자유롭게 사용가능하다) 부모 컨테이너를 display:flex;로 선언하면, 그 안에 종속된 칠드런 박스들을 움직일 수 있다. 각각의 박스에게 일일히 명령할 필요가 없다. flex-dirextion: row; 일때 (디폴트)\njustify-content 세로 적용\n\talign-items 가로로 적용\nflex-dirextion: column;으로 하면 반대로 적용됨 flex-wrap…","fields":{"slug":"/Blog/2020-04-03/"},"frontmatter":{"date":"2020-04-03","title":"CSS - Flexbox","category":"Blog","cover":null}}},{"node":{"excerpt":"Box Model & Box-Sizing box-sizing은 박스의 크기를 화면에 표시하는 방식을 변경하는 속성이다. content-box(기본값) : 콘텐트 영역을 기준으로 크기를 정한다 (패딩값을 주면 박스의 크기가 커진다)\nborder-box: 테두리를 기준으로 크기를 정한다 (패딩값이 주어져도 박스의 크기가 그대로 유지된다)\ninitial : 기본값으로 설정\ninherit : 부모 요소의 속성값을 상속받는다 Display block : element가 크기와 상관없이 그 옆에 다른 element…","fields":{"slug":"/Blog/2020-04-02/"},"frontmatter":{"date":"2020-04-02","title":"CSS - Box Model & Display & Position & Float","category":"Blog","cover":null}}},{"node":{"excerpt":"meta tag 브라우저에 전달하는 추가정보 Semantic Elements  HTML 시멘틱 태그를 사용하는 이유 1. HTML로 만든 문서에 추가적으로 의미를 부여해준다.\nNon-Semantic element인 div, span등으로만 이루어진 문서라면 어떤 구조로 되어있는지, 어떤 데이터로 이루어져있는지 파악하기 어렵다.\n따라서 Semantic 마크업을 사용하여 의미를 부여해준다면, 다른 개발자 혹은 미래의 내가 문서의 구조를 쉽게 파악할 수 있고, 유지보수하기 쉬워진다. 2. 검색 엔진 최적화(SEO: Search…","fields":{"slug":"/Blog/2020-04-01/"},"frontmatter":{"date":"2020-04-01","title":"HTML (meta tag & semantic tag)","category":"Blog","cover":null}}},{"node":{"excerpt":"repository : 폴더 \ngit: 코드 변경사항 기록, 추적하는 시스템 \ngithub: git 파일 올리는 인터넷의 저장소\ncommit : 파일 변경 기록함 (ex: 헤더를 만들었음)\nmaster: 처음 디폴트로 생성되는것. 모든 커밋 반영\nbranch : master의 복사판. 마스터 건드리지않고 새로운 기능이나 실험하고 싶을때 생성 평소에는 자신의 PC의 Local repository에서 작업하고, 코드를 공유하려면 Remote repository에 업로드한다(Push)\n그리고 Remote repository…","fields":{"slug":"/Blog/2020-03-31/"},"frontmatter":{"date":"2020-03-31","title":"Git & Github","category":"Blog","cover":null}}},{"node":{"excerpt":"리눅스란? 리누스 토르발스가 커뮤니티 주체로 개발한 유닉스 기반 컴퓨터 운영 체제이다. 리눅스의 구조 - Linux File System Hierarchy (FHS)  커널 : 리눅스의 핵심, 프로세스 관리, 메모리관리, 파일 및 장치등을 제어하는 기능을 수행한다. 셸 : 커널과 사용자의 접점 (bash ..) 사용자로부터 명령을 받아 그것을 해석하고 프로그램을 실행하는 역할 (터미널) 응용프로그램 : 각종 프로그래밍 개발 도구, 문서 편집도구, 네트워크 관련 도구등 Home Directory /home…","fields":{"slug":"/Blog/"},"frontmatter":{"date":"2020-03-02","title":"리눅스에 대해 알아보자","category":"Blog","cover":null}}}]}},"pageContext":{"pageNumber":0,"humanPageNumber":1,"skip":0,"limit":5,"numberOfPages":2,"previousPagePath":"","nextPagePath":"/2"}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}